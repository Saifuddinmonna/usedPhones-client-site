{"version":3,"file":"static/js/659.3ad2ebce.chunk.js","mappings":"yMAkCA,UAhCkB,SAAH,GAA2C,IAArCA,EAAG,EAAHA,IAAKC,EAAG,EAAHA,IAAKC,EAAS,EAATA,UAAcC,GAAK,YAC9C,GAAgCC,EAAAA,EAAAA,WAAS,GAAM,eAAxCC,EAAQ,KAAEC,EAAW,KAC5B,GAAgCF,EAAAA,EAAAA,UAAS,MAAK,eAAvCG,EAAQ,KAAEC,EAAW,KAW5B,OATAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAM,IAAIC,MAChBD,EAAIV,IAAMA,EACVU,EAAIE,OAAS,WACTJ,EAAYR,GACZM,GAAY,EAChB,CACJ,GAAG,CAACN,KAGA,iBAAKE,UAAS,mBAAcA,GAAY,WAClCG,IACE,gBAAKH,UAAU,+CAElBK,IACG,wBACIP,IAAKO,EACLN,IAAKA,EACLC,UAAS,qEACLG,EAAW,cAAgB,cAE3BF,MAKxB,C","sources":["components/LazyImage/LazyImage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst LazyImage = ({ src, alt, className, ...props }) => {\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [imageSrc, setImageSrc] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const img = new Image();\r\n        img.src = src;\r\n        img.onload = () => {\r\n            setImageSrc(src);\r\n            setIsLoaded(true);\r\n        };\r\n    }, [src]);\r\n\r\n    return (\r\n        <div className={`relative ${className}`}>\r\n            {!isLoaded && (\r\n                <div className=\"absolute inset-0 bg-gray-200 animate-pulse\" />\r\n            )}\r\n            {imageSrc && (\r\n                <img\r\n                    src={imageSrc}\r\n                    alt={alt}\r\n                    className={`w-full h-full object-cover transition-opacity duration-300 ${\r\n                        isLoaded ? 'opacity-100' : 'opacity-0'\r\n                    }`}\r\n                    {...props}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LazyImage; "],"names":["src","alt","className","props","useState","isLoaded","setIsLoaded","imageSrc","setImageSrc","useEffect","img","Image","onload"],"sourceRoot":""}